
labcode:     file format elf32-littleriscv
labcode
architecture: riscv:rv32, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x00000060 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000800 memsz 0x00000800 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f8  00000000  00000000  00000060  2**4
                  CONTENTS, ALLOC, LOAD, CODE
  1 .data         00000400  00000400  00000400  00000460  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  2 .riscv.attributes 0000001c  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY
  3 .comment      00000011  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY
  4 .debug_line   00000132  00000000  00000000  0000088d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   000000d3  00000000  00000000  000009bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 000000ae  00000000  00000000  00000a92  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges 00000040  00000000  00000000  00000b40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    000000dd  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000050  00000000  00000000  00000c60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000400 l    d  .data	00000000 .data
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 lab0.o
00000400 l       .data	00000000 stack
00000000 l    df *ABS*	00000000 SevenSeg.c
000000c0 g     F .text	00000038 display
00000010 g     F .text	000000b0 SevenSeg



Disassembly of section .text:

00000000 <SevenSeg-0x10>:
.text
.align 4

	la sp, stack
   0:	40000113          	li	sp,1024
	j	SevenSeg
   4:	00c0006f          	j	10 <SevenSeg>
	...

00000010 <SevenSeg>:
#include "SevenSeg.h"

void display (int);

void SevenSeg()
{
  10:	fe010113          	addi	sp,sp,-32
  14:	00112e23          	sw	ra,28(sp)
  18:	00812c23          	sw	s0,24(sp)
  1c:	02010413          	addi	s0,sp,32
	unsigned int * led_addr  = (unsigned int *) LEDG;
  20:	ffff27b7          	lui	a5,0xffff2
  24:	00878793          	addi	a5,a5,8 # ffff2008 <stack+0xffff1c08>
  28:	fef42223          	sw	a5,-28(s0)
	unsigned int i, data;

	data = 0x155;
  2c:	15500793          	li	a5,341
  30:	fef42423          	sw	a5,-24(s0)


	while (1){

		display(SEG_1);
  34:	07900513          	li	a0,121
  38:	088000ef          	jal	ra,c0 <display>
		*led_addr  = data;
  3c:	fe442783          	lw	a5,-28(s0)
  40:	fe842703          	lw	a4,-24(s0)
  44:	00e7a023          	sw	a4,0(a5)
	    data = data ^ 0x3FF;
  48:	fe842783          	lw	a5,-24(s0)
  4c:	3ff7c793          	xori	a5,a5,1023
  50:	fef42423          	sw	a5,-24(s0)

		for (i=0; i<0xFFFFF; i++) ;
  54:	fe042623          	sw	zero,-20(s0)
  58:	0100006f          	j	68 <SevenSeg+0x58>
  5c:	fec42783          	lw	a5,-20(s0)
  60:	00178793          	addi	a5,a5,1
  64:	fef42623          	sw	a5,-20(s0)
  68:	fec42703          	lw	a4,-20(s0)
  6c:	001007b7          	lui	a5,0x100
  70:	ffe78793          	addi	a5,a5,-2 # ffffe <stack+0xffbfe>
  74:	fee7f4e3          	bgeu	a5,a4,5c <SevenSeg+0x4c>
		// for (i=0; i<0x2; i++) ;

		display(SEG_2);
  78:	02400513          	li	a0,36
  7c:	044000ef          	jal	ra,c0 <display>
		*led_addr  = data;
  80:	fe442783          	lw	a5,-28(s0)
  84:	fe842703          	lw	a4,-24(s0)
  88:	00e7a023          	sw	a4,0(a5)
	    data = data ^ 0x3FF;
  8c:	fe842783          	lw	a5,-24(s0)
  90:	3ff7c793          	xori	a5,a5,1023
  94:	fef42423          	sw	a5,-24(s0)

		for (i=0; i<0xFFFFF; i++) ;
  98:	fe042623          	sw	zero,-20(s0)
  9c:	0100006f          	j	ac <SevenSeg+0x9c>
  a0:	fec42783          	lw	a5,-20(s0)
  a4:	00178793          	addi	a5,a5,1
  a8:	fef42623          	sw	a5,-20(s0)
  ac:	fec42703          	lw	a4,-20(s0)
  b0:	001007b7          	lui	a5,0x100
  b4:	ffe78793          	addi	a5,a5,-2 # ffffe <stack+0xffbfe>
  b8:	fee7f4e3          	bgeu	a5,a4,a0 <SevenSeg+0x90>
		display(SEG_1);
  bc:	f79ff06f          	j	34 <SevenSeg+0x24>

000000c0 <display>:

}


void display (int num)
{
  c0:	fd010113          	addi	sp,sp,-48
  c4:	02812623          	sw	s0,44(sp)
  c8:	03010413          	addi	s0,sp,48
  cc:	fca42e23          	sw	a0,-36(s0)
	unsigned int * seg0_addr = (unsigned int *) SevenSeg0;
  d0:	ffff27b7          	lui	a5,0xffff2
  d4:	00c78793          	addi	a5,a5,12 # ffff200c <stack+0xffff1c0c>
  d8:	fef42623          	sw	a5,-20(s0)

	*seg0_addr = num;
  dc:	fdc42703          	lw	a4,-36(s0)
  e0:	fec42783          	lw	a5,-20(s0)
  e4:	00e7a023          	sw	a4,0(a5)

	return;
  e8:	00000013          	nop
}
  ec:	02c12403          	lw	s0,44(sp)
  f0:	03010113          	addi	sp,sp,48
  f4:	00008067          	ret
