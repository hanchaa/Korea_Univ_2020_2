
labcode:     file format elf32-littleriscv
labcode
architecture: riscv:rv32, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x00000060 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000800 memsz 0x00000800 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000218  00000000  00000000  00000060  2**4
                  CONTENTS, ALLOC, LOAD, CODE
  1 .data         00000400  00000400  00000400  00000460  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  2 .riscv.attributes 0000001c  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY
  3 .comment      00000011  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY
  4 .debug_line   00000280  00000000  00000000  0000088d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   00000130  00000000  00000000  00000b0d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 000000ce  00000000  00000000  00000c3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges 00000040  00000000  00000000  00000d10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    000000e4  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000074  00000000  00000000  00000e34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000400 l    d  .data	00000000 .data
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 lab0.o
00000400 l       .data	00000000 stack
00000000 l    df *ABS*	00000000 SevenSeg.c
000000d0 g     F .text	00000148 display
00000010 g     F .text	00000080 SevenSeg
00000090 g     F .text	00000040 my_addition



Disassembly of section .text:

00000000 <SevenSeg-0x10>:
.text
.align 4

	la sp, stack
   0:	40000113          	li	sp,1024
	j	SevenSeg
   4:	00c0006f          	j	10 <SevenSeg>
	...

00000010 <SevenSeg>:

void display (int);
int  my_addition (int *, int *);

int SevenSeg()
{
  10:	fe010113          	addi	sp,sp,-32
  14:	00112e23          	sw	ra,28(sp)
  18:	00812c23          	sw	s0,24(sp)
  1c:	02010413          	addi	s0,sp,32
	unsigned int i;
	int in1, in2, out;

	in1 = 5;
  20:	00500793          	li	a5,5
  24:	fef42223          	sw	a5,-28(s0)

	while (1){

		for (in2 = -5; in2 < 5 ; in2++) {
  28:	ffb00793          	li	a5,-5
  2c:	fef42023          	sw	a5,-32(s0)
  30:	0500006f          	j	80 <SevenSeg+0x70>

			out = my_addition (&in1, &in2);
  34:	fe040713          	addi	a4,s0,-32
  38:	fe440793          	addi	a5,s0,-28
  3c:	00070593          	mv	a1,a4
  40:	00078513          	mv	a0,a5
  44:	04c000ef          	jal	ra,90 <my_addition>
  48:	fea42423          	sw	a0,-24(s0)

			display(out);                 // Display a number on HEX0
  4c:	fe842503          	lw	a0,-24(s0)
  50:	080000ef          	jal	ra,d0 <display>

			for (i=0; i<0x50000; i++) ;  // delay for roughly 0.5 second
  54:	fe042623          	sw	zero,-20(s0)
  58:	0100006f          	j	68 <SevenSeg+0x58>
  5c:	fec42783          	lw	a5,-20(s0)
  60:	00178793          	addi	a5,a5,1
  64:	fef42623          	sw	a5,-20(s0)
  68:	fec42703          	lw	a4,-20(s0)
  6c:	000507b7          	lui	a5,0x50
  70:	fef766e3          	bltu	a4,a5,5c <SevenSeg+0x4c>
		for (in2 = -5; in2 < 5 ; in2++) {
  74:	fe042783          	lw	a5,-32(s0)
  78:	00178793          	addi	a5,a5,1 # 50001 <stack+0x4fc01>
  7c:	fef42023          	sw	a5,-32(s0)
  80:	fe042703          	lw	a4,-32(s0)
  84:	00400793          	li	a5,4
  88:	fae7d6e3          	bge	a5,a4,34 <SevenSeg+0x24>
  8c:	f9dff06f          	j	28 <SevenSeg+0x18>

00000090 <my_addition>:
	return 0;
}


int my_addition (int * a, int * b)
{
  90:	fd010113          	addi	sp,sp,-48
  94:	02812623          	sw	s0,44(sp)
  98:	03010413          	addi	s0,sp,48
  9c:	fca42e23          	sw	a0,-36(s0)
  a0:	fcb42c23          	sw	a1,-40(s0)
	int sum;

	sum = *a + *b;
  a4:	fdc42783          	lw	a5,-36(s0)
  a8:	0007a703          	lw	a4,0(a5)
  ac:	fd842783          	lw	a5,-40(s0)
  b0:	0007a783          	lw	a5,0(a5)
  b4:	00f707b3          	add	a5,a4,a5
  b8:	fef42623          	sw	a5,-20(s0)

	return sum;
  bc:	fec42783          	lw	a5,-20(s0)
}
  c0:	00078513          	mv	a0,a5
  c4:	02c12403          	lw	s0,44(sp)
  c8:	03010113          	addi	sp,sp,48
  cc:	00008067          	ret

000000d0 <display>:


void display (int num)
{
  d0:	fd010113          	addi	sp,sp,-48
  d4:	02812623          	sw	s0,44(sp)
  d8:	03010413          	addi	s0,sp,48
  dc:	fca42e23          	sw	a0,-36(s0)
	unsigned int * seg0_addr = (unsigned int *) SevenSeg0;
  e0:	ffff27b7          	lui	a5,0xffff2
  e4:	00c78793          	addi	a5,a5,12 # ffff200c <stack+0xffff1c0c>
  e8:	fef42623          	sw	a5,-20(s0)

	if      (num == 0) *seg0_addr = SEG_0;
  ec:	fdc42783          	lw	a5,-36(s0)
  f0:	00079a63          	bnez	a5,104 <display+0x34>
  f4:	fec42783          	lw	a5,-20(s0)
  f8:	04000713          	li	a4,64
  fc:	00e7a023          	sw	a4,0(a5)
			break;
	default: *seg0_addr = SEG_;
			break;
	}
*/
}
 100:	1080006f          	j	208 <display+0x138>
	else if (num == 1) *seg0_addr = SEG_1;
 104:	fdc42703          	lw	a4,-36(s0)
 108:	00100793          	li	a5,1
 10c:	00f71a63          	bne	a4,a5,120 <display+0x50>
 110:	fec42783          	lw	a5,-20(s0)
 114:	07900713          	li	a4,121
 118:	00e7a023          	sw	a4,0(a5)
}
 11c:	0ec0006f          	j	208 <display+0x138>
	else if (num == 2) *seg0_addr = SEG_2;
 120:	fdc42703          	lw	a4,-36(s0)
 124:	00200793          	li	a5,2
 128:	00f71a63          	bne	a4,a5,13c <display+0x6c>
 12c:	fec42783          	lw	a5,-20(s0)
 130:	02400713          	li	a4,36
 134:	00e7a023          	sw	a4,0(a5)
}
 138:	0d00006f          	j	208 <display+0x138>
	else if (num == 3) *seg0_addr = SEG_3;
 13c:	fdc42703          	lw	a4,-36(s0)
 140:	00300793          	li	a5,3
 144:	00f71a63          	bne	a4,a5,158 <display+0x88>
 148:	fec42783          	lw	a5,-20(s0)
 14c:	03000713          	li	a4,48
 150:	00e7a023          	sw	a4,0(a5)
}
 154:	0b40006f          	j	208 <display+0x138>
	else if (num == 4) *seg0_addr = SEG_4;
 158:	fdc42703          	lw	a4,-36(s0)
 15c:	00400793          	li	a5,4
 160:	00f71a63          	bne	a4,a5,174 <display+0xa4>
 164:	fec42783          	lw	a5,-20(s0)
 168:	01900713          	li	a4,25
 16c:	00e7a023          	sw	a4,0(a5)
}
 170:	0980006f          	j	208 <display+0x138>
	else if (num == 5) *seg0_addr = SEG_5;
 174:	fdc42703          	lw	a4,-36(s0)
 178:	00500793          	li	a5,5
 17c:	00f71a63          	bne	a4,a5,190 <display+0xc0>
 180:	fec42783          	lw	a5,-20(s0)
 184:	01200713          	li	a4,18
 188:	00e7a023          	sw	a4,0(a5)
}
 18c:	07c0006f          	j	208 <display+0x138>
	else if (num == 6) *seg0_addr = SEG_6;
 190:	fdc42703          	lw	a4,-36(s0)
 194:	00600793          	li	a5,6
 198:	00f71a63          	bne	a4,a5,1ac <display+0xdc>
 19c:	fec42783          	lw	a5,-20(s0)
 1a0:	00200713          	li	a4,2
 1a4:	00e7a023          	sw	a4,0(a5)
}
 1a8:	0600006f          	j	208 <display+0x138>
	else if (num == 7) *seg0_addr = SEG_7;
 1ac:	fdc42703          	lw	a4,-36(s0)
 1b0:	00700793          	li	a5,7
 1b4:	00f71a63          	bne	a4,a5,1c8 <display+0xf8>
 1b8:	fec42783          	lw	a5,-20(s0)
 1bc:	07800713          	li	a4,120
 1c0:	00e7a023          	sw	a4,0(a5)
}
 1c4:	0440006f          	j	208 <display+0x138>
	else if (num == 8) *seg0_addr = SEG_8;
 1c8:	fdc42703          	lw	a4,-36(s0)
 1cc:	00800793          	li	a5,8
 1d0:	00f71863          	bne	a4,a5,1e0 <display+0x110>
 1d4:	fec42783          	lw	a5,-20(s0)
 1d8:	0007a023          	sw	zero,0(a5)
}
 1dc:	02c0006f          	j	208 <display+0x138>
	else if (num == 9) *seg0_addr = SEG_9;
 1e0:	fdc42703          	lw	a4,-36(s0)
 1e4:	00900793          	li	a5,9
 1e8:	00f71a63          	bne	a4,a5,1fc <display+0x12c>
 1ec:	fec42783          	lw	a5,-20(s0)
 1f0:	01000713          	li	a4,16
 1f4:	00e7a023          	sw	a4,0(a5)
}
 1f8:	0100006f          	j	208 <display+0x138>
	else               *seg0_addr = SEG_;
 1fc:	fec42783          	lw	a5,-20(s0)
 200:	03f00713          	li	a4,63
 204:	00e7a023          	sw	a4,0(a5)
}
 208:	00000013          	nop
 20c:	02c12403          	lw	s0,44(sp)
 210:	03010113          	addi	sp,sp,48
 214:	00008067          	ret
