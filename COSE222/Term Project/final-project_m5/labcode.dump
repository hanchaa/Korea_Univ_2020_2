
labcode:     file format elf32-littleriscv
labcode
architecture: riscv:rv32, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x00000060 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000824 memsz 0x00000824 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e4  00000000  00000000  00000060  2**4
                  CONTENTS, ALLOC, LOAD, CODE
  1 .data         00000424  00000400  00000400  00000460  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  2 .riscv.attributes 0000001c  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY
  3 .comment      00000011  00000000  00000000  000008a0  2**0
                  CONTENTS, READONLY
  4 .debug_line   00000192  00000000  00000000  000008b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   0000005e  00000000  00000000  00000a43  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 00000040  00000000  00000000  00000aa1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_aranges 00000040  00000000  00000000  00000ae8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    000000b5  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000034  00000000  00000000  00000be0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000400 l    d  .data	00000000 .data
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 m5.o
00000000 l       .text	00000000 main
000000b8 l       .text	00000000 error
00000424 l       .data	00000000 my_stack
00000420 l       .data	00000000 SEG8
0000009c l       .text	00000000 HEX3
0000006c l       .text	00000000 HEX0
000000b4 l       .text	00000000 forever
00000400 l       .data	00000000 SEG0
00000404 l       .data	00000000 SEG1
00000408 l       .data	00000000 SEG2
0000040c l       .data	00000000 SEG3
00000410 l       .data	00000000 SEG4
00000414 l       .data	00000000 SEG5
00000418 l       .data	00000000 SEG6
0000041c l       .data	00000000 SEG7
00000000 l    df *ABS*	00000000 SevenSeg.c
000000c8 g     F .text	0000001c SevenSeg



Disassembly of section .text:

00000000 <main>:
.text
.align 4
main:

	addi x3, x0, 0x400
   0:	40000193          	li	gp,1024
	slli x3, x3, 1
   4:	00119193          	slli	gp,gp,0x1
	add x3, x3, x3
   8:	003181b3          	add	gp,gp,gp
	add x3, x3, x3
   c:	003181b3          	add	gp,gp,gp
	lui x4, 0xFFFF0
  10:	ffff0237          	lui	tp,0xffff0
	or  x4, x3, x4     /* x4 contains 0xFFFF_2000, which is GPIO base address */
  14:	0041e233          	or	tp,gp,tp
	bne x4, x4, error
  18:	0a421063          	bne	tp,tp,b8 <error>
	
	la  sp, my_stack
  1c:	42400113          	li	sp,1060
	sw  x4, 0(sp)     /* store 0xFFFF_2000 to stack */
  20:	00412023          	sw	tp,0(sp)
	
	/* display 8 on HEX0 */
	la  x9, SEG8
  24:	42000493          	li	s1,1056
	lw  x10, (x9)
  28:	0004a503          	lw	a0,0(s1)
	lw  x3, (sp)
  2c:	00012183          	lw	gp,0(sp)
	sw  x10, 0xC(x3)
  30:	00a1a623          	sw	a0,12(gp)
	
	/* display 7 on HEX1 */
	lw  x10, -4(x9)
  34:	ffc4a503          	lw	a0,-4(s1)
	lw  x3, (sp)
  38:	00012183          	lw	gp,0(sp)
	add x3, x3, 0x10   /* x3 contains 0xFFFF_2010 */
  3c:	01018193          	addi	gp,gp,16
	sw  x10, (x3)
  40:	00a1a023          	sw	a0,0(gp)
	
	beq x3, x0, error  /* x3:0xFFFF_2010, should be not-taken */
  44:	06018a63          	beqz	gp,b8 <error>
	
	/* display 6 on HEX2 */
	lw  x3, (sp)
  48:	00012183          	lw	gp,0(sp)
	add x3, x3, 0x14   /* x3 contains 0xFFFF_2014 */
  4c:	01418193          	addi	gp,gp,20
	lw  x10, -8(x9)
  50:	ff84a503          	lw	a0,-8(s1)
	sw  x10, (x3)
  54:	00a1a023          	sw	a0,0(gp)
	
	/* display 5 on HEX3 */
	lw   x10, -12(x9)
  58:	ff44a503          	lw	a0,-12(s1)
	addi x3, x3, 4     /* x3 contains 0xFFFF_2018 */
  5c:	00418193          	addi	gp,gp,4
	sw   x10, (x3)
  60:	00a1a023          	sw	a0,0(gp)
	
	j   HEX3
  64:	0380006f          	j	9c <HEX3>
	add  x9, x9, 8     /* should not be executed */
  68:	00848493          	addi	s1,s1,8

0000006c <HEX0>:
	
HEX0:
	/* display 4 on HEX0 */
	lw  x10, -16(x9)
  6c:	ff04a503          	lw	a0,-16(s1)
	lw  x3, (sp)
  70:	00012183          	lw	gp,0(sp)
	add x3, x3, 0xC   	/* x3 contains 0xFFFF_200C */
  74:	00c18193          	addi	gp,gp,12
	sw  x10, (x3)
  78:	00a1a023          	sw	a0,0(gp)
	
	/* display 3 on HEX1 */
	lw   x10, -20(x9)
  7c:	fec4a503          	lw	a0,-20(s1)
	addi x3, x3, 4     /* x3 contains 0xFFFF_2010 */
  80:	00418193          	addi	gp,gp,4
	sw   x10, (x3)
  84:	00a1a023          	sw	a0,0(gp)
	
	/* display 2 on HEX2 */
	lw   x10, -24(x9)
  88:	fe84a503          	lw	a0,-24(s1)
	addi x4, x0, 4
  8c:	00400213          	li	tp,4
	add  x3, x3, x4    /* x3 contains 0xFFFF_2014 */
  90:	004181b3          	add	gp,gp,tp
	sw   x10, (x3)
  94:	00a1a023          	sw	a0,0(gp)
	
	ret                /* return to forever */
  98:	00008067          	ret

0000009c <HEX3>:
	
HEX3:
	/* display 1 on HEX3 */
	lw   x10, -28(x9)
  9c:	fe44a503          	lw	a0,-28(s1)
	lw   x3, (sp)
  a0:	00012183          	lw	gp,0(sp)
	addi x3, x3, 0x8
  a4:	00818193          	addi	gp,gp,8
	addi x3, x3, 0x10   /* x3 contains 0xFFFF_2018 */
  a8:	01018193          	addi	gp,gp,16
	sw   x10, (x3)
  ac:	00a1a023          	sw	a0,0(gp)
	
	call HEX0
  b0:	fbdff0ef          	jal	ra,6c <HEX0>

000000b4 <forever>:
	
forever:
	j forever
  b4:	0000006f          	j	b4 <forever>

000000b8 <error>:

error:
	j error
  b8:	0000006f          	j	b8 <error>
	...

000000c8 <SevenSeg>:
#include "SevenSeg.h"

void SevenSeg()
{
  c8:	ff010113          	addi	sp,sp,-16
  cc:	00812623          	sw	s0,12(sp)
  d0:	01010413          	addi	s0,sp,16
	return;
  d4:	00000013          	nop
}
  d8:	00c12403          	lw	s0,12(sp)
  dc:	01010113          	addi	sp,sp,16
  e0:	00008067          	ret
